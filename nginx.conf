upstream backend {
    least_conn;
    server app:3000; # Use IP for better performance
    server app:3000;
    keepalive 32; # Maintain persistent connections
}

server {
    server_name attendance.rendlabs.my.id;

    listen 443 ssl;
    http2 on;
    ssl_certificate /etc/ssl/certs/cert.pem; # SSL certificate
    ssl_certificate_key /etc/ssl/private/cert.key; # SSL key

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    location / {
        proxy_pass http://backend;
        proxy_redirect http://app:3000/ https://$server_name/;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_http_version 1.1;
        proxy_cache my_cache;
        proxy_cache_valid 200 301 302 60m;
        proxy_cache_bypass $http_cache_control;

        client_max_body_size 1G; # Adjust as needed
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
    }
}

server {
    server_name attendance.rendlabs.my.id;
    listen 80;

    if ($host = attendance.rendlabs.my.id) {
        return 301 https://$host$request_uri;
    }

    return 404; # Handle non-HTTPS traffic
}