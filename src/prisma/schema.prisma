// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  userGroup      UserGroup?      @relation(fields: [userGroupId], references: [id], onDelete: Cascade)
  userGroupId    Int?
  email          String          @unique
  token          String
  imei           String
  deviceId       String
  customerId     String
  idNumber       String
  employeeId     String
  infotechUserId Int
  companyId      Int
  userToken      String?
  attendanceData AttendanceData?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model UserGroup {
  id        Int      @id @default(autoincrement())
  name      String
  slug      String   @unique
  User      User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AttendanceData {
  id              Int      @id @default(autoincrement())
  User            User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          Int?     @unique
  locationName    String
  latitude        String
  longitude       String
  remarks         String?
  timeZone        String
  isActive        Int      @default(1) @db.SmallInt()
  isSubscribeMail Int      @default(1) @db.SmallInt()
  isImmediate     Int      @default(0) @db.SmallInt()
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
